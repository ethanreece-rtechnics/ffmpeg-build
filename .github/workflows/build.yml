name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./FFmpeg
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: install packages
      run: | 
        sudo apt update
        sudo apt install cmake libass-dev libgnutls28-dev libmp3lame-dev libsdl2-dev libva-dev libvdpau-dev libvorbis-dev libxcb-xfixes0-dev meson ninja-build yasm mingw-w64 mingw-w64-tools libunistring-dev
    - name: make build directory
      run: |
        mkdir build
        mkdir openssl
    - name: download OpenSSL build
      uses: robinraju/release-downloader@v1.8
      with:
        repository: ${{ github.repository_owner }}/openssl
        latest: true
        fileName: "openssl-win64-dev.zip"
        out-file-path: .
        extract: true
    - name: configure directories
      run: |
        mv build64/lib64 openssl/lib
        mv build64/include openssl/include
    - name: list files (debug)
      run: ls build
    - name: configure
      run: ./configure --arch=x86_64 --target-os=mingw64 --cross-prefix=x86_64-w64-mingw32- --enable-cross-compile --prefix=build --disable-doc --enable-openssl --extra-cflags="-Iopenssl/include" --extra-ldflags="-Lopenssl/lib"
    - name: make
      run: make
    - name: make install
      run: make install
    - name: upload build
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: build
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1.301
        # Authenticates packages to push to GPR
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'
    - name: make nuget package
      run: dotnet pack -c release -o nuget /p:Version=${{ steps.tag_version.outputs.new_tag }}
    - name: push nuget package
      run: dotnet nuget push "nuget/ffmpeg.**.nupkg" --no-symbols --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
    - name: zip ffmpeg
      run: |
        zip -r -j ffmpeg-win64.zip build/bin
        zip -r ffmpeg-win64-dev.zip build
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        files: |
          nuget/ffmpeg.**.nupkg
          ffmpeg-win64.zip
          ffmpeg-win64-dev.zip
